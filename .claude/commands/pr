#!/bin/bash

# Check if we're on main branch, if so create a feature branch
current_branch=$(git branch --show-current)

if [ "$current_branch" = "main" ]; then
    echo "Creating feature branch..."
    # Generate branch name based on current changes
    if git diff --quiet && git diff --cached --quiet; then
        echo "No changes detected to commit"
        exit 1
    fi
    
    # Create a feature branch with timestamp
    branch_name="feat/updates-$(date +%Y%m%d-%H%M%S)"
    git checkout -b "$branch_name"
    echo "Created and switched to branch: $branch_name"
fi

# Check if there are any changes to commit
if ! git diff --quiet || ! git diff --cached --quiet; then
    echo "Staging and committing changes..."
    git add -A
    
    # Generate commit message based on changed files
    changed_files=$(git diff --cached --name-only | head -3 | tr '\n' ' ')
    if [ -z "$changed_files" ]; then
        changed_files="various files"
    fi
    
    git commit -m "Update $changed_files"
    echo "Changes committed"
elif [ $(git rev-list --count HEAD ^origin/$(git branch --show-current) 2>/dev/null || echo "0") -eq 0 ]; then
    echo "No changes to push"
    exit 1
fi

# Push to origin
current_branch=$(git branch --show-current)
echo "Pushing to origin..."
git push -u origin "$current_branch"

# Create PR using gh CLI
echo "Creating pull request..."
pr_title="Update $(git log -1 --pretty=format:'%s' | cut -d' ' -f2-)"
pr_body="## Summary
- Updates and improvements to the codebase

## Changes
$(git log --oneline origin/main..HEAD | sed 's/^/- /')"

gh pr create --title "$pr_title" --body "$pr_body"

echo "Pull request created successfully!"